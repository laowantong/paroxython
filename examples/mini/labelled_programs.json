[
  [
    [
      [
        "assignment",
        [[1,1,"1-"]]
      ],
      [
        "assignment_lhs_identifier:a",
        [[1,1,"1-0-1-"]]
      ],
      [
        "assignment_rhs_atom:b",
        [[1,1,"1-1-"]]
      ],
      [
        "flat_style",
        [[1,1,""]]
      ],
      [
        "global_scope:a",
        [[1,1,""]]
      ],
      [
        "imperative_style",
        [[1,1,""]]
      ],
      [
        "loaded_variable:b",
        [[1,1,"1-1-"]]
      ],
      [
        "node:Assign",
        [[1,1,"1-"]]
      ],
      [
        "node:Name",
        [[1,1,"1-0-1-"],[1,1,"1-1-"]]
      ],
      [
        "one_liner_style",
        [[1,1,""]]
      ],
      [
        "scope:a",
        [[1,1,""]]
      ],
      [
        "single_assignment:a",
        [[1,1,"1-"]]
      ],
      [
        "variety:1",
        [[1,1,""]]
      ],
      [
        "whole_span:1",
        [[1,1,""]]
      ]
    ],
    [],
    {},
    {},
    "assignment.py",
    "a = b"
  ],
  [
    [
      [
        "added_block_label",
        [[1,8,""]]
      ],
      [
        "added_label_on_line_4",
        [[4,4,""]]
      ],
      [
        "addition_operator",
        [[7,7,"1-5-1-1-2-2-1-1-"]]
      ],
      [
        "argument:n",
        [[3,3,"1-5-1-1-1-0-1-1-"],[8,8,"1-5-2-0-1-1-"]]
      ],
      [
        "assignment:Add",
        [[7,7,"1-5-1-1-2-2-1-"]]
      ],
      [
        "assignment:FloorDiv",
        [[5,5,"1-5-1-1-2-1-1-"]]
      ],
      [
        "assignment_lhs_identifier:n",
        [[5,5,"1-5-1-1-2-1-1-0-1-"],[7,7,"1-5-1-1-2-2-1-0-1-"]]
      ],
      [
        "assignment_rhs_atom:1",
        [[7,7,"1-5-1-1-2-2-1-1-2-"]]
      ],
      [
        "assignment_rhs_atom:2",
        [[5,5,"1-5-1-1-2-1-1-1-2-"]]
      ],
      [
        "assignment_rhs_atom:3",
        [[7,7,"1-5-1-1-2-2-1-1-0-0-"]]
      ],
      [
        "assignment_rhs_atom:n",
        [[5,5,"1-5-1-1-2-1-1-1-0-"],[7,7,"1-5-1-1-2-2-1-1-0-2-"]]
      ],
      [
        "augmented_assignment_unpythonic",
        [[5,5,"1-5-1-1-2-1-1-"]]
      ],
      [
        "binary_operator:Add",
        [[7,7,"1-5-1-1-2-2-1-1-"]]
      ],
      [
        "binary_operator:Mod",
        [[4,4,"1-5-1-1-2-0-0-"]]
      ],
      [
        "binary_operator:Mult",
        [[7,7,"1-5-1-1-2-2-1-1-0-"]]
      ],
      [
        "comparison_operator:Eq",
        [[4,4,"1-5-1-1-2-0-2-1-"]]
      ],
      [
        "comparison_operator:NotEq",
        [[2,2,"1-5-1-0-2-1-"]]
      ],
      [
        "divisibility_test:2",
        [[4,4,"1-5-1-1-2-0-"]]
      ],
      [
        "external_free_call:print",
        [[3,3,"1-5-1-1-1-0-"],[8,8,"1-5-2-0-"]]
      ],
      [
        "free_call:print",
        [[3,3,"1-5-1-1-1-0-"],[8,8,"1-5-2-0-"]]
      ],
      [
        "free_call_without_result:print",
        [[3,3,"1-5-1-1-1-0-"],[8,8,"1-5-2-0-"]]
      ],
      [
        "function:print_collatz",
        [[1,8,"1-"]]
      ],
      [
        "function_line_count:8",
        [[1,8,"1-"]]
      ],
      [
        "function_parameter:n",
        [[1,1,"1-1-1-1-"]]
      ],
      [
        "function_parameter_flavor:arg",
        [[1,1,"1-1-1-1-"]]
      ],
      [
        "function_returning_nothing:print_collatz",
        [[1,8,"1-"]]
      ],
      [
        "if",
        [[4,7,"1-5-1-1-2-"]]
      ],
      [
        "if_else_branch",
        [[7,7,"1-5-1-1-2-2-1-"]]
      ],
      [
        "if_test_atom:0",
        [[4,4,"1-5-1-1-2-0-2-1-"]]
      ],
      [
        "if_test_atom:2",
        [[4,4,"1-5-1-1-2-0-0-2-"]]
      ],
      [
        "if_test_atom:n",
        [[4,4,"1-5-1-1-2-0-0-0-"]]
      ],
      [
        "if_then_branch",
        [[5,5,"1-5-1-1-2-1-1-"]]
      ],
      [
        "literal:0",
        [[4,4,"1-5-1-1-2-0-2-1-"]]
      ],
      [
        "literal:1",
        [[2,2,"1-5-1-0-2-1-"],[7,7,"1-5-1-1-2-2-1-1-2-"]]
      ],
      [
        "literal:2",
        [[4,4,"1-5-1-1-2-0-0-2-"],[5,5,"1-5-1-1-2-1-1-1-2-"]]
      ],
      [
        "literal:3",
        [[7,7,"1-5-1-1-2-2-1-1-0-0-"]]
      ],
      [
        "loaded_variable:n",
        [[2,2,"1-5-1-0-0-"],[3,3,"1-5-1-1-1-0-1-1-"],[4,4,"1-5-1-1-2-0-0-0-"],[5,5,"1-5-1-1-2-1-1-1-0-"],[7,7,"1-5-1-1-2-2-1-1-0-2-"],[8,8,"1-5-2-0-1-1-"]]
      ],
      [
        "local_scope:n",
        [[1,8,"1-"]]
      ],
      [
        "loop:while",
        [[2,7,"1-5-1-"]]
      ],
      [
        "loop_with_late_exit:while",
        [[2,7,"1-5-1-"]]
      ],
      [
        "magic_number:3",
        [[7,7,"1-5-1-1-2-2-1-1-0-0-"]]
      ],
      [
        "modulo_operator",
        [[4,4,"1-5-1-1-2-0-0-"]]
      ],
      [
        "multiplication_operator",
        [[7,7,"1-5-1-1-2-2-1-1-0-"]]
      ],
      [
        "node:Assign",
        [[5,5,"1-5-1-1-2-1-1-"],[7,7,"1-5-1-1-2-2-1-"]]
      ],
      [
        "node:BinOp",
        [[4,4,"1-5-1-1-2-0-0-"],[5,5,"1-5-1-1-2-1-1-1-"],[7,7,"1-5-1-1-2-2-1-1-"],[7,7,"1-5-1-1-2-2-1-1-0-"]]
      ],
      [
        "node:Call",
        [[3,3,"1-5-1-1-1-0-"],[8,8,"1-5-2-0-"]]
      ],
      [
        "node:Compare",
        [[2,2,"1-5-1-0-"],[4,4,"1-5-1-1-2-0-"]]
      ],
      [
        "node:Expr",
        [[3,3,"1-5-1-1-1-"],[8,8,"1-5-2-"]]
      ],
      [
        "node:FunctionDef",
        [[1,8,"1-"]]
      ],
      [
        "node:If",
        [[4,7,"1-5-1-1-2-"]]
      ],
      [
        "node:Name",
        [[2,2,"1-5-1-0-0-"],[3,3,"1-5-1-1-1-0-0-"],[3,3,"1-5-1-1-1-0-1-1-"],[4,4,"1-5-1-1-2-0-0-0-"],[5,5,"1-5-1-1-2-1-1-0-1-"],[5,5,"1-5-1-1-2-1-1-1-0-"],[7,7,"1-5-1-1-2-2-1-0-1-"],[7,7,"1-5-1-1-2-2-1-1-0-2-"],[8,8,"1-5-2-0-0-"],[8,8,"1-5-2-0-1-1-"]]
      ],
      [
        "node:Num",
        [[2,2,"1-5-1-0-2-1-"],[4,4,"1-5-1-1-2-0-0-2-"],[4,4,"1-5-1-1-2-0-2-1-"],[5,5,"1-5-1-1-2-1-1-1-2-"],[7,7,"1-5-1-1-2-2-1-1-0-0-"],[7,7,"1-5-1-1-2-2-1-1-2-"]]
      ],
      [
        "node:While",
        [[2,7,"1-5-1-"]]
      ],
      [
        "node:arg",
        [[1,1,"1-1-1-1-"]]
      ],
      [
        "procedural_style",
        [[1,8,""]]
      ],
      [
        "scope:n",
        [[1,8,"1-"]]
      ],
      [
        "single_assignment:n",
        [[5,5,"1-5-1-1-2-1-1-"],[7,7,"1-5-1-1-2-2-1-"]]
      ],
      [
        "suggest_constant_definition",
        [[2,2,""]]
      ],
      [
        "unknown_label",
        [[6,6,""]]
      ],
      [
        "update:n:1",
        [[7,7,"1-5-1-1-2-2-1-"]]
      ],
      [
        "update:n:2",
        [[5,5,"1-5-1-1-2-1-1-"]]
      ],
      [
        "update:n:3",
        [[7,7,"1-5-1-1-2-2-1-"]]
      ],
      [
        "update_by_assignment:n:1",
        [[7,7,"1-5-1-1-2-2-1-"]]
      ],
      [
        "update_by_assignment:n:2",
        [[5,5,"1-5-1-1-2-1-1-"]]
      ],
      [
        "update_by_assignment:n:3",
        [[7,7,"1-5-1-1-2-2-1-"]]
      ],
      [
        "update_by_assignment_with:Add",
        [[7,7,"1-5-1-1-2-2-1-"]]
      ],
      [
        "update_by_assignment_with:FloorDiv",
        [[5,5,"1-5-1-1-2-1-1-"]]
      ],
      [
        "update_with:Add",
        [[7,7,"1-5-1-1-2-2-1-"]]
      ],
      [
        "update_with:FloorDiv",
        [[5,5,"1-5-1-1-2-1-1-"]]
      ],
      [
        "variety:4",
        [[1,8,""]]
      ],
      [
        "verbose_conditional_assignment",
        [[4,7,"1-5-1-1-2-"]]
      ],
      [
        "whole_span:8",
        [[1,8,""]]
      ]
    ],
    [],
    {
      "suggest_constant_definition": [[2,2,""]],
      "added_label_on_line_4": [[4,4,""]],
      "unknown_label": [[6,6,""]],
      "added_block_label": [[1,8,""]]
    },
    {
      "literal:Num": [[5,5,""]],
      "binary_operator:FloorDiv": []
    },
    "collatz.py",
    "def print_collatz(n):\n    while n != 1:\n        print(n)\n        if n % 2 == 0:\n            n = n // 2\n        else:\n            n = 3 * n + 1\n    print(n)"
  ],
  [
    [
      [
        "argument:",
        [[4,4,"2-2-1-1-1-0-1-1-"],[6,6,"2-2-1-2-1-1-1-0-1-1-"],[8,8,"2-2-1-2-1-2-1-1-1-0-1-1-"]]
      ],
      [
        "argument:1",
        [[2,2,"2-1-1-1-"]]
      ],
      [
        "argument:101",
        [[2,2,"2-1-1-2-"]]
      ],
      [
        "argument:i",
        [[10,10,"2-2-1-2-1-2-1-2-1-0-1-1-"]]
      ],
      [
        "binary_operator:Mod",
        [[3,3,"2-2-1-0-0-"],[5,5,"2-2-1-2-1-0-0-"],[7,7,"2-2-1-2-1-2-1-0-0-"]]
      ],
      [
        "comparison_operator:Eq",
        [[3,3,"2-2-1-0-2-1-"],[5,5,"2-2-1-2-1-0-2-1-"],[7,7,"2-2-1-2-1-2-1-0-2-1-"]]
      ],
      [
        "divisibility_test:15",
        [[3,3,"2-2-1-0-"]]
      ],
      [
        "divisibility_test:3",
        [[5,5,"2-2-1-2-1-0-"]]
      ],
      [
        "divisibility_test:5",
        [[7,7,"2-2-1-2-1-2-1-0-"]]
      ],
      [
        "external_free_call:print",
        [[4,4,"2-2-1-1-1-0-"],[6,6,"2-2-1-2-1-1-1-0-"],[8,8,"2-2-1-2-1-2-1-1-1-0-"],[10,10,"2-2-1-2-1-2-1-2-1-0-"]]
      ],
      [
        "external_free_call:range",
        [[2,2,"2-1-"]]
      ],
      [
        "for:i",
        [[2,10,"2-"]]
      ],
      [
        "for_range:1:101",
        [[2,10,"2-"]]
      ],
      [
        "free_call:print",
        [[4,4,"2-2-1-1-1-0-"],[6,6,"2-2-1-2-1-1-1-0-"],[8,8,"2-2-1-2-1-2-1-1-1-0-"],[10,10,"2-2-1-2-1-2-1-2-1-0-"]]
      ],
      [
        "free_call:range",
        [[2,2,"2-1-"]]
      ],
      [
        "free_call_without_result:print",
        [[4,4,"2-2-1-1-1-0-"],[6,6,"2-2-1-2-1-1-1-0-"],[8,8,"2-2-1-2-1-2-1-1-1-0-"],[10,10,"2-2-1-2-1-2-1-2-1-0-"]]
      ],
      [
        "global_scope:i",
        [[1,10,""]]
      ],
      [
        "if",
        [[3,10,"2-2-1-"],[5,10,"2-2-1-2-1-"],[7,10,"2-2-1-2-1-2-1-"]]
      ],
      [
        "if_elif_branch",
        [[6,6,"2-2-1-2-1-1-1-"],[8,8,"2-2-1-2-1-2-1-1-1-"]]
      ],
      [
        "if_else_branch",
        [[10,10,"2-2-1-2-1-2-1-2-1-"]]
      ],
      [
        "if_test_atom:0",
        [[3,3,"2-2-1-0-2-1-"],[5,5,"2-2-1-2-1-0-2-1-"],[7,7,"2-2-1-2-1-2-1-0-2-1-"]]
      ],
      [
        "if_test_atom:15",
        [[3,3,"2-2-1-0-0-2-"]]
      ],
      [
        "if_test_atom:3",
        [[5,5,"2-2-1-2-1-0-0-2-"]]
      ],
      [
        "if_test_atom:5",
        [[7,7,"2-2-1-2-1-2-1-0-0-2-"]]
      ],
      [
        "if_test_atom:i",
        [[3,3,"2-2-1-0-0-0-"],[5,5,"2-2-1-2-1-0-0-0-"],[7,7,"2-2-1-2-1-2-1-0-0-0-"]]
      ],
      [
        "if_then_branch",
        [[4,4,"2-2-1-1-1-"]]
      ],
      [
        "imperative_style",
        [[1,10,""]]
      ],
      [
        "import_internally:collatz",
        [[1,1,"1-"]]
      ],
      [
        "import_module_internally:collatz",
        [[1,1,"1-"]]
      ],
      [
        "iteration_variable:i",
        [[2,2,"2-0-"]]
      ],
      [
        "literal:0",
        [[3,3,"2-2-1-0-2-1-"],[5,5,"2-2-1-2-1-0-2-1-"],[7,7,"2-2-1-2-1-2-1-0-2-1-"]]
      ],
      [
        "literal:1",
        [[2,2,"2-1-1-1-"]]
      ],
      [
        "literal:101",
        [[2,2,"2-1-1-2-"]]
      ],
      [
        "literal:15",
        [[3,3,"2-2-1-0-0-2-"]]
      ],
      [
        "literal:3",
        [[5,5,"2-2-1-2-1-0-0-2-"]]
      ],
      [
        "literal:5",
        [[7,7,"2-2-1-2-1-2-1-0-0-2-"]]
      ],
      [
        "literal:Str",
        [[4,4,"2-2-1-1-1-0-1-1-"],[6,6,"2-2-1-2-1-1-1-0-1-1-"],[8,8,"2-2-1-2-1-2-1-1-1-0-1-1-"]]
      ],
      [
        "loaded_variable:i",
        [[3,3,"2-2-1-0-0-0-"],[5,5,"2-2-1-2-1-0-0-0-"],[7,7,"2-2-1-2-1-2-1-0-0-0-"],[10,10,"2-2-1-2-1-2-1-2-1-0-1-1-"]]
      ],
      [
        "loop:for",
        [[2,10,"2-"]]
      ],
      [
        "loop_with_late_exit:for",
        [[2,10,"2-"]]
      ],
      [
        "magic_number:101",
        [[2,2,"2-1-1-2-"]]
      ],
      [
        "magic_number:15",
        [[3,3,"2-2-1-0-0-2-"]]
      ],
      [
        "magic_number:3",
        [[5,5,"2-2-1-2-1-0-0-2-"]]
      ],
      [
        "magic_number:5",
        [[7,7,"2-2-1-2-1-2-1-0-0-2-"]]
      ],
      [
        "modulo_operator",
        [[3,3,"2-2-1-0-0-"],[5,5,"2-2-1-2-1-0-0-"],[7,7,"2-2-1-2-1-2-1-0-0-"]]
      ],
      [
        "node:BinOp",
        [[3,3,"2-2-1-0-0-"],[5,5,"2-2-1-2-1-0-0-"],[7,7,"2-2-1-2-1-2-1-0-0-"]]
      ],
      [
        "node:Call",
        [[2,2,"2-1-"],[4,4,"2-2-1-1-1-0-"],[6,6,"2-2-1-2-1-1-1-0-"],[8,8,"2-2-1-2-1-2-1-1-1-0-"],[10,10,"2-2-1-2-1-2-1-2-1-0-"]]
      ],
      [
        "node:Compare",
        [[3,3,"2-2-1-0-"],[5,5,"2-2-1-2-1-0-"],[7,7,"2-2-1-2-1-2-1-0-"]]
      ],
      [
        "node:Expr",
        [[4,4,"2-2-1-1-1-"],[6,6,"2-2-1-2-1-1-1-"],[8,8,"2-2-1-2-1-2-1-1-1-"],[10,10,"2-2-1-2-1-2-1-2-1-"]]
      ],
      [
        "node:For",
        [[2,10,"2-"]]
      ],
      [
        "node:If",
        [[3,10,"2-2-1-"],[5,10,"2-2-1-2-1-"],[7,10,"2-2-1-2-1-2-1-"]]
      ],
      [
        "node:Import",
        [[1,1,"1-"]]
      ],
      [
        "node:Name",
        [[2,2,"2-0-"],[2,2,"2-1-0-"],[3,3,"2-2-1-0-0-0-"],[4,4,"2-2-1-1-1-0-0-"],[5,5,"2-2-1-2-1-0-0-0-"],[6,6,"2-2-1-2-1-1-1-0-0-"],[7,7,"2-2-1-2-1-2-1-0-0-0-"],[8,8,"2-2-1-2-1-2-1-1-1-0-0-"],[10,10,"2-2-1-2-1-2-1-2-1-0-0-"],[10,10,"2-2-1-2-1-2-1-2-1-0-1-1-"]]
      ],
      [
        "node:Num",
        [[2,2,"2-1-1-1-"],[2,2,"2-1-1-2-"],[3,3,"2-2-1-0-0-2-"],[3,3,"2-2-1-0-2-1-"],[5,5,"2-2-1-2-1-0-0-2-"],[5,5,"2-2-1-2-1-0-2-1-"],[7,7,"2-2-1-2-1-2-1-0-0-2-"],[7,7,"2-2-1-2-1-2-1-0-2-1-"]]
      ],
      [
        "node:Str",
        [[4,4,"2-2-1-1-1-0-1-1-"],[6,6,"2-2-1-2-1-1-1-0-1-1-"],[8,8,"2-2-1-2-1-2-1-1-1-0-1-1-"]]
      ],
      [
        "range:1:101",
        [[2,2,"2-1-"]]
      ],
      [
        "scope:i",
        [[1,10,""]]
      ],
      [
        "variety:3",
        [[1,10,""]]
      ],
      [
        "whole_span:10",
        [[1,10,""]]
      ]
    ],
    [],
    {},
    {},
    "fizzbuzz.py",
    "import collatz\nfor i in range(1, 101):\n    if i % 15 == 0:\n        print(\"FizzBuzz\")\n    elif i % 3 == 0:\n        print(\"Fizz\")\n    elif i % 5 == 0:\n        print(\"Buzz\")\n    else:\n        print(i)"
  ],
  [
    [
      [
        "binary_operator:Mod",
        [[3,3,"2-5-1-0-0-"]]
      ],
      [
        "comparison_operator:Eq",
        [[3,3,"2-5-1-0-2-1-"]]
      ],
      [
        "divisibility_test:2",
        [[3,3,"2-5-1-0-"]]
      ],
      [
        "function:is_even",
        [[2,3,"2-"]]
      ],
      [
        "function_line_count:2",
        [[2,3,"2-"]]
      ],
      [
        "function_parameter:n",
        [[2,2,"2-1-1-1-"]]
      ],
      [
        "function_parameter_flavor:arg",
        [[2,2,"2-1-1-1-"]]
      ],
      [
        "function_returning_something:is_even",
        [[2,3,"2-"]]
      ],
      [
        "functional_style",
        [[1,3,""]]
      ],
      [
        "import_internally:fizzbuzz",
        [[1,1,"1-"]]
      ],
      [
        "import_module_internally:fizzbuzz",
        [[1,1,"1-"]]
      ],
      [
        "literal:0",
        [[3,3,"2-5-1-0-2-1-"]]
      ],
      [
        "literal:2",
        [[3,3,"2-5-1-0-0-2-"]]
      ],
      [
        "loaded_variable:n",
        [[3,3,"2-5-1-0-0-0-"]]
      ],
      [
        "local_scope:n",
        [[2,3,"2-"]]
      ],
      [
        "modulo_operator",
        [[3,3,"2-5-1-0-0-"]]
      ],
      [
        "node:BinOp",
        [[3,3,"2-5-1-0-0-"]]
      ],
      [
        "node:Compare",
        [[3,3,"2-5-1-0-"]]
      ],
      [
        "node:FunctionDef",
        [[2,3,"2-"]]
      ],
      [
        "node:Import",
        [[1,1,"1-"]]
      ],
      [
        "node:Name",
        [[3,3,"2-5-1-0-0-0-"]]
      ],
      [
        "node:Num",
        [[3,3,"2-5-1-0-0-2-"],[3,3,"2-5-1-0-2-1-"]]
      ],
      [
        "node:Return",
        [[3,3,"2-5-1-"]]
      ],
      [
        "node:arg",
        [[2,2,"2-1-1-1-"]]
      ],
      [
        "one_liner_style",
        [[1,3,""]]
      ],
      [
        "pure_function:is_even",
        [[2,3,"2-"]]
      ],
      [
        "return",
        [[3,3,"2-5-1-"]]
      ],
      [
        "scope:n",
        [[2,3,"2-"]]
      ],
      [
        "variety:2",
        [[1,3,""]]
      ],
      [
        "whole_span:3",
        [[1,3,""]]
      ]
    ],
    [],
    {},
    {},
    "is_even.py",
    "import fizzbuzz\ndef is_even(n):\n    return n % 2 == 0"
  ]
]